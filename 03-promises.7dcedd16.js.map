{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAOC,SAASC,cAAc,QAC9BC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBAIvCI,GAHcL,SAASC,cAAc,UAG3B,MACVK,EAAU,GACV,EAAe,EACfC,EAAM,EACNC,EAAa,EA6BjB,SAASC,EAAcC,EAAUC,GAC/B,IAAQC,EAAiBN,EAAjBM,KAAMC,EAAWP,EAAXO,OACd,GAAe,EACdN,GAAM,EAEPO,QAAQC,IAAIP,GAER,IAAeK,GAAYG,cAChBX,GAEf,IAAMY,EAAgBC,KAAKC,SAAW,GAWlC,OAVM,IAAIC,SAAQ,SAACC,EAASC,GAC1BL,EACFI,IAEAC,OAIIC,MAAK,SAAAC,G,OAAWC,EAAA5B,GAAS6B,OAAOF,QAAQ,uBAAmCG,OAAVpB,EAAI,QAAiBoB,OAAXnB,EAAW,UAAMoB,OAAM,SAAAC,G,OAASJ,EAAA5B,GAAS6B,OAAOI,QAAQ,sBAAkCH,OAAVpB,EAAI,QAAiBoB,OAAXnB,EAAW,UAErK,IAAf,EACFA,GAAiBI,OAEjB,EAjDJb,EAAKgC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBAOJ,IAAQC,GALR5B,EAAU,CACR4B,MAAOC,OAAOjC,EAAWkC,OACzBxB,KAAMuB,OAAOhC,EAAUiC,OACvBvB,OAAQsB,OAAO/B,EAAYgC,SAErBF,MAAOtB,EAASN,EAATM,KAEfJ,EAAa0B,EACbpB,QAAQC,IAAIP,GAEG6B,YAAW,WACpBzB,EAAOsB,GACOG,WAAW5B,EAAeyB,EAAO3B,EAAKC,GACtDH,EAAUiC,YAAY7B,EAAeG,EAAML,EAAKC,IAEhDH,EAAUiC,YAAY7B,EAAeG,EAAML,EAAKC,KAEjD0B,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\nimport \"notiflix/dist/notiflix-3.2.5.min.css\";\n\nconst form = document.querySelector('form')\nconst inputDelay = document.querySelector('input[name = delay]');\nconst inputStep = document.querySelector('input[name = step]');\nconst inputAmount = document.querySelector('input[name = amount]');\nconst btnSubmit = document.querySelector('button');\n\nlet firstDelayId = null;\nlet timerId = null;\nlet options = {};\nlet quantityСounter = 0;\nlet pos = 0;\nlet finalDelay = 0;\nlet promise = null;\nlet onceTimeTimer = null;\n\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(evt) {\n  evt.preventDefault();\n\n  options = {\n    delay: Number(inputDelay.value),\n    step: Number(inputStep.value),\n    amount: Number(inputAmount.value)\n  };\n  const { delay, step } = options;\n\n  finalDelay = delay;\n  console.log(finalDelay)\n\n  firstDelayId = setTimeout(() => {\n    if (step > delay) {\n      onceTimeTimer = setTimeout(createPromise, delay, pos, finalDelay)\n      timerId = setInterval(createPromise, step, pos, finalDelay);\n    } else {\n      timerId = setInterval(createPromise, step, pos, finalDelay)\n    }\n  }, delay)\n}\n\nfunction createPromise(position, delai) {\n  const { step, amount } = options;\n  quantityСounter += 1;\n  pos += 1;\n\n  console.log(finalDelay)\n\n  if (quantityСounter === amount) {\n    clearInterval(timerId);\n  }\n  const shouldResolve = Math.random() > 0.3;\n  promise = new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve();\n    } else {\n      reject();\n  }\n  })\n\n  promise.then(success => Notiflix.Notify.success(`✅ Fulfilled promise ${pos} in ${finalDelay}ms`)).catch(error => Notiflix.Notify.failure(`❌ Rejected promise ${pos} in ${finalDelay}ms`));\n\n  if (quantityСounter !== 1) {\n    return finalDelay += step;;\n  } else {\n    return; \n  }\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$inputDelay","$ce04d3a99e08e73b$var$inputStep","$ce04d3a99e08e73b$var$inputAmount","$ce04d3a99e08e73b$var$timerId","$ce04d3a99e08e73b$var$options","$ce04d3a99e08e73b$var$pos","$ce04d3a99e08e73b$var$finalDelay","$ce04d3a99e08e73b$var$createPromise","position","delai","step","amount","console","log","clearInterval","shouldResolve","Math","random","Promise","resolve","reject","then","success","$parcel$interopDefault","Notify","concat","catch","error","failure","addEventListener","evt","preventDefault","delay","Number","value","setTimeout","setInterval"],"version":3,"file":"03-promises.7dcedd16.js.map"}