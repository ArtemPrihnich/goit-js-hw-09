{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAOC,SAASC,cAAc,QAC9BC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBACzBD,SAASC,cAAc,UAEzC,IAAII,EAAe,KACfC,EAAU,KACVC,EAAU,GACV,EAAe,EACfC,EAAM,EACNC,EAAa,EACbC,EAAU,KACVC,EAAgB,KA2BpB,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,KAAEA,EAAIC,OAAEA,GAAWT,EACzB,GAAe,EACdC,GAAM,EAEPS,QAAQC,IAAIT,GAER,IAAeO,GAAYG,cAChBb,GAEf,MAAMc,EAAgBC,KAAKC,SAAW,GAWlC,OAVJZ,EAAU,IAAIa,SAAQ,CAACC,EAASC,KAC1BL,EACFI,IAEAC,OAIJf,EAAQgB,MAAKC,GAAWC,EAAA/B,GAASgC,OAAOF,QAAQ,uBAAqBnB,QAAYC,SAAiBqB,OAAOC,GAAUH,EAAA/B,GAAQgC,OAACG,QAAO,sBAASxB,QAA2BC,SAEpJ,IAAf,EACFA,GAAiBM,OAEjB,EAjDJhB,EAAKkC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBAEJ5B,EAAU,CACR6B,MAAOC,OAAOnC,EAAWoC,OACzBvB,KAAMsB,OAAOlC,EAAUmC,OACvBtB,OAAQqB,OAAOjC,EAAYkC,QAE7B,MAAMF,MAAEA,EAAKrB,KAAEA,GAASR,EAExBE,EAAa2B,EACbnB,QAAQC,IAAIT,GAEZJ,EAAekC,YAAW,KACpBxB,EAAOqB,GACTzB,EAAgB4B,WAAW3B,EAAewB,EAAO5B,EAAKC,GACtDH,EAAUkC,YAAY5B,EAAeG,EAAMP,EAAKC,IAEhDH,EAAUkC,YAAY5B,EAAeG,EAAMP,EAAKC,KAEjD2B","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\nimport \"notiflix/dist/notiflix-3.2.5.min.css\";\n\nconst form = document.querySelector('form')\nconst inputDelay = document.querySelector('input[name = delay]');\nconst inputStep = document.querySelector('input[name = step]');\nconst inputAmount = document.querySelector('input[name = amount]');\nconst btnSubmit = document.querySelector('button');\n\nlet firstDelayId = null;\nlet timerId = null;\nlet options = {};\nlet quantityСounter = 0;\nlet pos = 0;\nlet finalDelay = 0;\nlet promise = null;\nlet onceTimeTimer = null;\n\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(evt) {\n  evt.preventDefault();\n\n  options = {\n    delay: Number(inputDelay.value),\n    step: Number(inputStep.value),\n    amount: Number(inputAmount.value)\n  };\n  const { delay, step } = options;\n\n  finalDelay = delay;\n  console.log(finalDelay)\n\n  firstDelayId = setTimeout(() => {\n    if (step > delay) {\n      onceTimeTimer = setTimeout(createPromise, delay, pos, finalDelay)\n      timerId = setInterval(createPromise, step, pos, finalDelay);\n    } else {\n      timerId = setInterval(createPromise, step, pos, finalDelay)\n    }\n  }, delay)\n}\n\nfunction createPromise(position, delai) {\n  const { step, amount } = options;\n  quantityСounter += 1;\n  pos += 1;\n\n  console.log(finalDelay)\n\n  if (quantityСounter === amount) {\n    clearInterval(timerId);\n  }\n  const shouldResolve = Math.random() > 0.3;\n  promise = new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve();\n    } else {\n      reject();\n  }\n  })\n\n  promise.then(success => Notiflix.Notify.success(`✅ Fulfilled promise ${pos} in ${finalDelay}ms`)).catch(error => Notiflix.Notify.failure(`❌ Rejected promise ${pos} in ${finalDelay}ms`));\n\n  if (quantityСounter !== 1) {\n    return finalDelay += step;;\n  } else {\n    return; \n  }\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$inputDelay","$47d4ff9957288465$var$inputStep","$47d4ff9957288465$var$inputAmount","$47d4ff9957288465$var$firstDelayId","$47d4ff9957288465$var$timerId","$47d4ff9957288465$var$options","$47d4ff9957288465$var$pos","$47d4ff9957288465$var$finalDelay","$47d4ff9957288465$var$promise","$47d4ff9957288465$var$onceTimeTimer","$47d4ff9957288465$var$createPromise","position","delai","step","amount","console","log","clearInterval","shouldResolve","Math","random","Promise","resolve","reject","then","success","$parcel$interopDefault","Notify","catch","error","failure","addEventListener","evt","preventDefault","delay","Number","value","setTimeout","setInterval"],"version":3,"file":"03-promises.7e2b1a5a.js.map"}